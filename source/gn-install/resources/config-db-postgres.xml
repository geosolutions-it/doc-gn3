<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="true"
  xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xsi:schemaLocation="
  http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
  http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="file:///var/lib/tomcat/geonetwork/gn/geonetwork.properties" file-encoding="UTF-8" ignore-unresolvable="true" order="0"/>


    <!-- Values to be injected in the default bean jdbcDataSource -->

    <!--  Params for PostgreSQL DBMS -->
    
    <bean id="jpaVendorAdapterDatabaseParam" class="java.lang.String">
        <constructor-arg value="POSTGRESQL"/>
    </bean>

    <bean id="jdbcDriverClassName" class="java.lang.String">
        <constructor-arg value="org.postgresql.Driver"/>
    </bean>

    <bean id="jdbcURL" class="java.lang.String">
        <constructor-arg value="jdbc:postgresql://${jdbc.host}:5432/${jdbc.database}"/>
    </bean>

<!-- Using JNDI, this datasource will be able to handle both GN data and spatial indices -->
<!--    
   <bean id="jdbcDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName" value="java:comp/env/jdbc/gndb"/>
      <property name="cache" value="true"/>
      <property name="exposeAccessContext" value="false"/>
   </bean>

    <bean id="datastoreFactory" class="org.geotools.data.postgis.PostgisNGJNDIDataStoreFactory"/>

    <bean id="datastore"
          factory-bean="datastoreFactory"
          factory-method="createDataStore" >
        <constructor-arg>
            <map>
                <description>
                    The datastore factory parameters see Geotools documentation for details.

                    http://docs.geotools.org/latest/userguide/library/data/datastore.html
                </description>
                <entry key="dbtype" value="postgis"/>
                <entry key="jndiReferenceName" value="java:comp/env/jdbc/gndb"/>                                
                <entry key="Data Source" value-ref="jdbcDataSource"/>                
            </map>
        </constructor-arg>
    </bean>
-->

</beans>